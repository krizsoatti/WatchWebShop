@using System.Globalization;
@using WatchWebShop.Data.ViewModels;
@model ShoppingCartVM

@{
    ViewData["Title"] = "Shopping cart summary";
}

<div class="row">
    <div class="col-md-8 offset-2">
        <div class="text-center">
            <h2>Your shopping cart summary</h2>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Quantity</th>
                    <th>Product</th>
                    <th>Unit Price</th>
                    <th>Subtotal - Netto</th>
                    <th>Subtotal - Brutto</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
                {
                    <tr>
                        <td class="align-middle">@item.Quantity</td>
                        <td class="align-middle">@item.Product.Name</td>
                        <td class="align-middle">@item.Product.UnitPriceNetto.ToString("c")</td>
                        <td class="align-middle">@((item.Quantity * item.Product.UnitPriceNetto).ToString("c"))</td>
                        <td class="align-middle">@(((item.Quantity * item.Product.UnitPriceNetto) * (1.00 + Model.ShoppingCart.GetCategoriesTaxRate())).ToString("c"))</td>
                        <td class="align-middle">
                            <a class="text-danger" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart"
                           asp-route-id="@item.Product.Id">
                           <i class="bi bi-cart-dash"></i>
                            </a>
                            |
                            <a class="text-success" asp-controller="Orders" asp-action="AddItemToShoppingCart"
                           asp-route-id="@item.Product.Id">
                           <i class="bi bi-cart-plus"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2"></td>
                    <td><b>Total in €:</b></td>
                    <td>
                        @Model.ShoppingCartTotal.ToString("N2", CultureInfo.InvariantCulture)
                    </td>
                    <td>
                        <p id="total">@Model.ShoppingCartTotalBrutto.ToString("N2", CultureInfo.InvariantCulture)</p>
                    </td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
        
        <div class="text-right">
            <div class="btn-group">
                <div id="paypal-btn"></div>
                <span style="padding: 10px;"></span>
                <a class="btn btn-outline-success" asp-controller="Products" asp-action="Index">
                    Add more items
                </a>
                
                @*<a class="btn btn-outline-primary" asp-controller="Orders" asp-action="CompleteOrder">
                    Complete Order
                </a>*@
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>
        //let _total = @Html.Raw(Model.ShoppingCartTotal);
        paypal.Button.render({
            //Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'Ac5eN6Km8BAscK3-D_AmUOy7OtCNcpjeT4J0igP0bg6kD1IZ9bHI4e9biY5k2spmB0P3jFfGGjxVFvDF'
            },
            // Customize button
            locale: 'de_DE',
            style: {
                size: 'medium',
                color: 'black',
                shape: 'rect'
            },
            commit: true,
            // Set up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: document.getElementById("total").innerHTML,
                            currency: 'EUR'
                        }
                    }]
                });
            },
            //Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    console.log('Payment has been processed.');
                    setTimeout(function () { document.location.href = '@Url.Action("CompleteOrder", "Orders", new { })' }, 500);
                });
            },
            onCancel: function (data, actions) {
                window.alert('You\'ve cancelled payment!');
            },
            onError: function (error) {
                window.alert(error);
            }
        }, '#paypal-btn')
    </script>

}